{"version":3,"file":"DatadogLoggingService.js","names":["_browserRum","require","_browserLogs","_logging","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","call","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","_get","get","bind","property","receiver","base","_superPropBase","desc","object","hasOwnProperty","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","console","log","NewRelicLoggingService","browserLogNameIgnoredError","sendBrowserLog","actionName","message","customAttributes","process","env","NODE_ENV","datadogLogs","logger","info","concat","sendError","error","DatadogLoggingService","_NewRelicLoggingServi","options","_this","config","undefined","ignoredErrorRegexes","IGNORED_ERROR_REGEX","initialize","beforeSend","requiredDatadogConfig","DATADOG_APPLICATION_ID","DATADOG_CLIENT_TOKEN","hasRequiredDatadogConfig","every","datadogVersion","DATADOG_VERSION","APP_VERSION","datadogRum","init","applicationId","clientToken","site","DATADOG_SITE","service","DATADOG_SERVICE","DATADOG_ENV","version","sessionSampleRate","parseInt","DATADOG_SESSION_SAMPLE_RATE","sessionReplaySampleRate","DATADOG_SESSION_REPLAY_SAMPLE_RATE","trackUserInteractions","trackResources","trackLongTasks","defaultPrivacyLevel","forwardErrorsToLogs","DATADOG_LOGS_SESSION_SAMPLE_RATE","logInfo","infoStringOrErrorObject","customAttrs","infoCustomAttributes","logError","errorStringOrObject","errorCustomAttributes","allCustomAttributes","errorMessage","match","setCustomAttribute","name","setUserProperty","setGlobalContextProperty","_default","exports"],"sources":["../src/DatadogLoggingService.js"],"sourcesContent":["import { datadogRum } from '@datadog/browser-rum';\nimport { datadogLogs } from '@datadog/browser-logs';\nimport { NewRelicLoggingService } from '@edx/frontend-platform/logging';\n\nconsole.log(NewRelicLoggingService, \"---NewRelicLoggingService\")\n\nconst browserLogNameIgnoredError = 'IGNORED_ERROR';\n\nfunction sendBrowserLog(actionName, message, customAttributes) {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(actionName, message, customAttributes); // eslint-disable-line\n  }\n  datadogLogs.logger.info(`${actionName}: ${message}`, customAttributes);\n}\n\nfunction sendError(error, customAttributes) {\n  if (process.env.NODE_ENV === 'development') {\n    console.error(error, customAttributes); // eslint-disable-line\n  }\n  // https://docs.datadoghq.com/logs/log_collection/javascript/#error-tracking\n  datadogLogs.logger.error(error, customAttributes);\n}\n\nclass DatadogLoggingService extends NewRelicLoggingService {\n  constructor(options) {\n    super(options);\n    const config = options ? options.config : undefined;\n    this.ignoredErrorRegexes = config ? config.IGNORED_ERROR_REGEX : undefined;\n    this.initialize();\n  }\n\n  // to read more about the use cases for beforeSend, refer to the documentation:\n  // https://docs.datadoghq.com/real_user_monitoring/guide/enrich-and-control-rum-data/?tab=event#event-and-context-structure\n  // (e.g., discarding frontend errors matching the optional `IGNORED_ERROR_REGEX` configuration,\n  // currently implemented in `logError` below).\n  beforeSend() {\n    // common/shared logic across all MFEs\n    return true;\n  }\n\n  initialize() {\n    const requiredDatadogConfig = [\n      process.env.DATADOG_APPLICATION_ID,\n      process.env.DATADOG_CLIENT_TOKEN,\n    ];\n    const hasRequiredDatadogConfig = requiredDatadogConfig.every(value => !!value);\n\n    // Do not attempt to initialize Datadog if required config settings are not supplied.\n    if (!hasRequiredDatadogConfig) {\n      return;\n    }\n\n    const datadogVersion = process.env.DATADOG_VERSION || process.env.APP_VERSION || '1.0.0';\n    datadogRum.init({\n      applicationId: process.env.DATADOG_APPLICATION_ID,\n      beforeSend: this.beforeSend,\n      clientToken: process.env.DATADOG_CLIENT_TOKEN,\n      site: process.env.DATADOG_SITE || '',\n      service: process.env.DATADOG_SERVICE || '',\n      env: process.env.DATADOG_ENV || '',\n      version: datadogVersion,\n      sessionSampleRate: parseInt(process.env.DATADOG_SESSION_SAMPLE_RATE || 0, 10),\n      sessionReplaySampleRate: parseInt(process.env.DATADOG_SESSION_REPLAY_SAMPLE_RATE || 0, 10),\n      trackUserInteractions: true,\n      trackResources: true,\n      trackLongTasks: true,\n      defaultPrivacyLevel: 'mask-user-input',\n    });\n    datadogLogs.init({\n      clientToken: process.env.DATADOG_CLIENT_TOKEN,\n      site: process.env.DATADOG_SITE || '',\n      env: process.env.DATADOG_ENV || '',\n      forwardErrorsToLogs: true,\n      sessionSampleRate: parseInt(process.env.DATADOG_LOGS_SESSION_SAMPLE_RATE || 0, 10),\n      service: process.env.DATADOG_SERVICE || '',\n      version: datadogVersion,\n    });\n  }\n\n  logInfo(infoStringOrErrorObject, customAttributes = {}) {\n    super.logInfo(infoStringOrErrorObject, customAttributes);\n    let message = infoStringOrErrorObject;\n    let customAttrs = { ...customAttributes };\n    if (typeof infoStringOrErrorObject === 'object' && 'message' in infoStringOrErrorObject) {\n      const infoCustomAttributes = infoStringOrErrorObject.customAttributes || {};\n      customAttrs = { ...infoCustomAttributes, ...customAttributes };\n      message = infoStringOrErrorObject.message;\n    }\n    datadogLogs.logger.info(message, customAttrs);\n  }\n\n  /**\n   *\n   *\n   * @param {*} errorStringOrObject\n   * @param {*} [customAttributes={}]\n   * @memberof DatadogLoggingService\n   */\n  logError(errorStringOrObject, customAttributes = {}) {\n    super.logError(errorStringOrObject, customAttributes);\n    const errorCustomAttributes = errorStringOrObject.customAttributes || {};\n    let allCustomAttributes = { ...errorCustomAttributes, ...customAttributes };\n    if (Object.keys(allCustomAttributes).length === 0) {\n      allCustomAttributes = undefined;\n    }\n\n    /*\n        Separate the errors into ignored errors and other errors.\n        Ignored errors are logged as it is.\n        Other errors are logged via error API.\n    */\n    const errorMessage = errorStringOrObject.message || (typeof errorStringOrObject === 'string' ? errorStringOrObject : '');\n    if (this.ignoredErrorRegexes && errorMessage.match(this.ignoredErrorRegexes)) {\n      /* ignored error */\n      sendBrowserLog(browserLogNameIgnoredError, errorMessage, allCustomAttributes);\n    } else {\n      /*  error! */\n      sendError(errorStringOrObject, allCustomAttributes);\n    }\n  }\n\n  /**\n   * Sets a custom attribute that will be included with all subsequent log messages.\n   *\n   * @param {string} name\n   * @param {string|number|null} value\n   */\n  setCustomAttribute(name, value) {\n    super.setCustomAttribute(name, value);\n    if (name === 'userId') {\n      datadogLogs.setUserProperty('id', value);\n      datadogRum.setUserProperty('id', value);\n      return;\n    }\n    datadogLogs.setGlobalContextProperty(name, value);\n    datadogRum.setGlobalContextProperty(name, value);\n  }\n}\n\nexport default DatadogLoggingService;\n"],"mappings":"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","ignoreList":[]}